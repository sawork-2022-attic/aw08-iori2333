openapi: 3.0.0
info:
  title: API
  version: 1.0.0
  description: API
  contact:
    name: Swagger API Team
paths:
  /cart:
    get:
      summary: Get cart information
      operationId: getCart
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        '404':
          description: Cart not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - cart
  /cart/{productId}:
    get:
      summary: Get product information
      operationId: getCartItem
      parameters:
        - name: productId
          in: path
          required: true
          description: The id of the product to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '404':
          description: Cart not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - cart
    post:
      summary: Add product to cart
      operationId: addProductToCart
      parameters:
        - name: productId
          in: path
          description: Product ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        '404':
          description: Cart not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - cart
    put:
      summary: Update product quantity in cart
      operationId: updateProductQuantityInCart
      parameters:
        - name: productId
          in: path
          description: Product ID
          required: true
          schema:
            type: string
        - name: quantity
          in: query
          description: Product quantity
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        '404':
          description: Cart not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - cart
    delete:
      summary: Remove product from cart
      operationId: removeProductFromCart
      parameters:
        - name: productId
          in: path
          description: Product ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        '404':
          description: Cart not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - cart
  /order:
    get:
      summary: All orders
      operationId: getAllOrders
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '404':
          description: Cart not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - cart
    post:
      summary: Add a new order
      operationId: createOrder
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Item'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
      tags:
        - cart
  /order/{orderId}:
    get:
      summary: Get order information
      operationId: getOrderById
      parameters:
        - name: orderId
          in: path
          required: true
          description: The id of the order
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - cart
    put:
      summary: Update order status
      operationId: updateOrderStatusById
      parameters:
        - name: orderId
          in: path
          description: Order ID
          required: true
          schema:
            type: string
        - name: status
          in: query
          description: status
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - cart
    delete:
      summary: Remove order
      operationId: removeOrderById
      parameters:
        - name: orderId
          in: path
          description: Order ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - cart
  /products:
    get:
      summary: List all products
      operationId: listProducts
      tags:
        - products
      responses:
        '200':
          description: A paged array of products
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Products"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /products/{productId}:
    get:
      summary: Info for a specific product
      operationId: showProductById
      tags:
        - product
      parameters:
        - name: productId
          in: path
          required: true
          description: The id of the product to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /checkout:
    post:
      summary: Calculate the total price of the order
      operationId: calculateOrderTotal
      tags:
        - checkout
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CheckoutRequest"
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: number
                    format: double
        '400':
          description: Invalid order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /delivery:
    get:
      summary: Get all delivering info
      operationId: getDeliveryInfo
      tags:
        - delivery
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeliveryRecord'
  /delivery/{orderId}:
    get:
      summary: Get the delivery info for a specific order
      operationId: getOrderDeliveryInfo
      tags:
        - delivery
      parameters:
        - name: orderId
          in: path
          required: true
          description: The id of the order to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryRecord'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Item:
      type: object
      required:
        - productId
        - quantity
      properties:
        productId:
          type: string
        quantity:
          type: number
    Cart:
      type: array
      items:
        $ref: "#/components/schemas/Item"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Order:
      type: object
      required:
        - id
        - items
        - status
      properties:
        id:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/Item'
        status:
          type: string
    Product:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
        name:
          type: string
        price:
          type: number
        image:
          type: string
    Products:
      type: array
      items:
        $ref: "#/components/schemas/Product"
    CheckoutItem:
      type: object
      required:
        - quantity
        - price
      properties:
        quantity:
          type: integer
          format: int32
        price:
          type: number
          format: double
    CheckoutRequest:
      type: array
      items:
        $ref: "#/components/schemas/CheckoutItem"
    DeliveryRecord:
      type: object
      required:
        - orderId
        - status
        - createdAt
      properties:
        orderId:
          type: string
        status:
          type: string
        createdAt:
          type: integer
          format: int64
